# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  before_all do
    ENV["FASTLANE_DONT_STORE_PASSWORD"] = "1"
    ENV["FASTLANE_PASSWORD"] = "Dangelo11"
    ENV["FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD"]= "yksi-xzkf-qlwt-cbzb"

    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
  end

  desc "Build and prepare deployment"
  lane :build_for_deploy do
    gym(scheme: ENV['SCHEME'], skip_package_ipa: true, skip_archive: true, skip_codesigning: true) # Build your app - more options available
  end

  desc "Desploy to TestFlight "
  lane :deploy do 

  	# Make sure we start off with a clean state
  	ensure_git_status_clean

  	# increment the build number from the latest uploaded build
  	build_number = latest_testflight_build_number + 1
  	increment_build_number({
  		build_number: build_number
	})

  	# build and generate an ipa file
	gym(scheme: ENV['SCHEME'], xcargs: "-allowProvisioningUpdates", output_directory: "./fastlane/builds") # Build your app - more options available

  	# Make sure our directory is clean, except for changes Fastlane has made
  	clean_build_artifacts

  	# Tag release and push to GitHub
	commit_version_bump message: "Deploying version #{build_number}."
	add_git_tag tag: version_number
	push_to_git_remote
  end

  desc "Build an Alphatet release "
  lane :build_alpha do
    # Uncomment cocoapods and carthage for Newzik target
    #cocoapods
    #carthage(cache_builds: true)
    enable_automatic_code_signing
    increment_build_number
    gym(scheme: ENV['SCHEME'], xcargs: "-allowProvisioningUpdates", output_directory: "./fastlane/builds") # Build your app - more options available
  
    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Upload ipa to TestFlight"
  lane :testflight_alpha do
    # match(type: "appstore") # more information: https://codesigning.guide
    enable_automatic_code_signing(path: "NewzikVersion4.xcodeproj")
    pilot(skip_submission: true, ipa: "./fastlane/builds/#{ENV['APP_NAME']}.ipa") # Build your app - more options available
    #deliver(force: true)

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end


  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    cocoapods
    carthage(cache_builds: true)
    # match(type: "appstore") # more information: https://codesigning.guide
    gym(scheme: ENV['SCHEME']) # Build your app - more options available
    pilot(distribute_external:false, skip_submission:true, skip_waiting_for_build_processing:true)
  
    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    cocoapods
    carthage(cache_builds: true)
    # match(type: "appstore")
    # snapshot
    gym(scheme: ENV['SCHEME']) # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end

